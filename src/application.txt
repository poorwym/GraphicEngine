#pragma once
//version v1.1
#include <GL/glew.h>
#include <GLFW/glfw3.h>
#include <iostream>
#include <string>
#include <fstream>
#include <sstream>

#include "Renderer.h"

#include "VertexBuffer.h"

#include "IndexBuffer.h"

#include "VertexArray.h"

#include "Shader.h"

#include "Texture.h"
#include "glm/glm.hpp"
#include "glm/gtc/matrix_transform.hpp"
#include "imgui/imgui.h"
#include "imgui/imgui_impl_glfw.h"
#include "imgui/imgui_impl_opengl3.h"

#include "test/TestClearColor.h"

int main(void)
{
    GLFWwindow* window;

    /* Initialize the library */
    if (!glfwInit())
        return -1;
    
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 4);//设置OpenGL版本主版本号 
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 5);//设置OpenGL版本次版本号
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);//设置使用核心模式


    /* Create a windowed mode window and its OpenGL context */
    window = glfwCreateWindow(1920, 1080, "Hello World", NULL, NULL);
    if (!window)
    {
        glfwTerminate();
        return -1;
    }

    /* Make the window's context current */
    glfwMakeContextCurrent(window);

    GLCall(glfwSwapInterval(1));

    if (glewInit() != GLEW_OK) {
        std::cout << "error";
    }
    std::cout << glGetString(GL_VERSION) << std::endl;

    float position[] = {
        -100.0f, 100.0f, 0.0f, 0.0f,//0 后两位表示贴图的坐标
        -100.0f, -100.0f, 1.0f, 0.0f,//1
        100.0f, -100.0f, 1.0f, 1.0f,//2
        100.0f, 100.0f, 0.0f, 1.0f //3
    };

    unsigned int indices[] = {
        0, 1, 2,
        2, 3, 0
    };

    glm::mat4 proj = glm::ortho( 0.0f, 1920.0f, 0.0f, 1080.0f, -1.0f, 1.0f );//投影矩阵
    glm::mat4 view = glm::translate(glm::mat4(1.0f), glm::vec3(0, 0, 0));//视图矩阵

    GLCall(glEnable(GL_BLEND));
    GLCall(glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA));

    VertexArray va;
    
    VertexBuffer vb( position, 4 * 4 * sizeof(float));

    IndexBuffer ib(indices, 6);//index buffer

    VertexBufferLayout layout;

    layout.Push<float>(2);//每个vertex2个float
    layout.Push<float>(2);//每个vertex2个float，这个应该是和贴图有关

    va.AddBuffer(vb, layout);


    //glBindBuffer(GL_ARRAY_BUFFER,0);//传入0表示解除绑定 
    /* Loop until the user closes the window */

    Shader shader("res/shaders/Basic.shader");
    shader.Bind();

    //shader.setUniform4f("u_Color", 0.8f, 0.3f, 0.8f, 1.0f);

    Texture texture("./res/Textures/card_box_bottom.png");
    texture.Bind();
    shader.setUniform1i("u_Texture", 0);//0表示texture slot（默认是0）
    

    //解除所有绑定
    va.Unbind();
    vb.Unbind();
    ib.Unbind();
    shader.Unbind();

    Renderer renderer;

    //ImGui initialization
    ImGui::CreateContext();
    ImGuiIO& io = ImGui::GetIO(); // 获取 io 对象

    // 添加默认字体
    io.Fonts->AddFontDefault();

    // 设置 ImGui 样式
    ImGui::StyleColorsDark();

    // 初始化平台/渲染绑定
    ImGui_ImplGlfw_InitForOpenGL(window, true);
    ImGui_ImplOpenGL3_Init("#version 130"); // 确保根据你的 OpenGL 版本修改

    float r = 0.0f;
    float increment = 0.01f;
    bool show_demo_window = true;
    bool show_another_window = false;
    ImVec4 clear_color = ImVec4(0.45f, 0.55f, 0.60f, 1.00f);
    glm::vec3 translationA = glm::vec3(200, 200, 0);
    glm::vec3 translationB = glm::vec3(200, 200, 0);

    while (!glfwWindowShouldClose(window))
    {
        /* Render here */
        
        renderer.Clear(); 

        ImGui_ImplGlfw_NewFrame();  // 例如，如果你使用 GLFW
        ImGui_ImplOpenGL3_NewFrame(); // 如果你使用 OpenGL 作为渲染后端
        ImGui::NewFrame(); // ImGui 自身的新帧调用
        //shader.Bind();
        //shader.setUniform4f("u_Color", r, 0.3f, 0.8f, 1.0f);
        //glDrawArrays(GL_TRIANGLES,0,3);//绘制三角形,0为buffer起始位置，3为顶点个数

        shader.Bind();

        {
            glm::mat4 model = glm::translate(glm::mat4(1.0f), translationA);//模型矩阵
            glm::mat4 mvp = proj * view * model;
            shader.setUniformMat4f("u_MVP", mvp);
            renderer.Draw(va, ib, shader);
        }

        {
            glm::mat4 model = glm::translate(glm::mat4(1.0f), translationB);//模型矩阵
            glm::mat4 mvp = proj * view * model;
            shader.setUniformMat4f("u_MVP", mvp);
            renderer.Draw(va, ib, shader);
        }

        {
            ImGui::Begin("Hello, world!");                          // Create a window called "Hello, world!" and append into it.
            ImGui::SliderFloat3("Translation A", &translationA.x, 0.0f, 1080.0f);            // Edit 1 float using a slider from 0.0f to 1.0f
            ImGui::SliderFloat3("Translation B", &translationB.x, 0.0f, 1080.0f);
            ImGui::Text("Application average %.3f ms/frame (%.1f FPS)", 1000.0f / io.Framerate, io.Framerate);
            ImGui::End();
        }

        ImGui::Render();
        ImGui_ImplOpenGL3_RenderDrawData(ImGui::GetDrawData());
        /*if (r >= 1.0f) {
            increment = -0.01f;
        }
        else if (r <= 0.0f) {
            increment = 0.01f;
        }

        r = r + increment;*/
        //上面UNSIGNED_INT尤其重要，所有index buffer必须是UNSIGNED_INT类型，否则会报错

        /* Swap front and back buffers */
        
        glfwSwapBuffers(window);

        /* Poll for and process events */
        glfwPollEvents();
    }
    //glDeleteProgram(shader);

    glfwDestroyWindow(window);
    glfwTerminate();
    return 0;
}